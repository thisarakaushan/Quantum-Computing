//------------------------------------------------------------------------------
// <auto-generated>                                                             
//     This code was generated by a tool.                                       
//     Changes to this file may cause incorrect behavior and will be lost if    
//     the code is regenerated.                                                 
// </auto-generated>                                                            
//------------------------------------------------------------------------------
#pragma warning disable 436
#pragma warning disable 162
#pragma warning disable 1591
using System;
using Microsoft.Quantum.Core;
using Microsoft.Quantum.Intrinsic;
using Microsoft.Quantum.Intrinsic.Interfaces;
using Microsoft.Quantum.Simulation.Core;

[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Example1\",\"Name\":\"GenerateQubit\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\KIIT\\\\Documents\\\\4_My_Projects\\\\Quantum Computing\\\\Example2\\\\Program.qs\",\"Position\":{\"Item1\":8,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":24}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"Result\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Example1\",\"Name\":\"GenerateQubit\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\KIIT\\\\Documents\\\\4_My_Projects\\\\Quantum Computing\\\\Example2\\\\Program.qs\",\"Position\":{\"Item1\":8,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":24}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Example1\",\"Name\":\"SRandomNumber\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\KIIT\\\\Documents\\\\4_My_Projects\\\\Quantum Computing\\\\Example2\\\\Program.qs\",\"Position\":{\"Item1\":16,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":24}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"max\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":25},\"Item2\":{\"Line\":1,\"Column\":28}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"Int\"},\"ReturnType\":{\"Case\":\"Int\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Example1\",\"Name\":\"SRandomNumber\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\KIIT\\\\Documents\\\\4_My_Projects\\\\Quantum Computing\\\\Example2\\\\Program.qs\",\"Position\":{\"Item1\":16,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":24}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Example1\",\"Name\":\"Number\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Core\",\"Name\":\"EntryPoint\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":12}}]}}]},\"TypeIdRange\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":12}}]},\"Argument\":{\"Item1\":{\"Case\":\"UnitValue\"},\"Item2\":[],\"Item3\":{\"Case\":\"UnitType\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":12},\"Item2\":{\"Line\":1,\"Column\":14}}]}},\"Offset\":{\"Item1\":28,\"Item2\":4},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\KIIT\\\\Documents\\\\4_My_Projects\\\\Quantum Computing\\\\Example2\\\\Program.qs\",\"Position\":{\"Item1\":29,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":17}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"Int\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Example1\",\"Name\":\"Number\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\KIIT\\\\Documents\\\\4_My_Projects\\\\Quantum Computing\\\\Example2\\\\Program.qs\",\"Position\":{\"Item1\":29,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":17}},\"Documentation\":[]}")]
#line hidden
namespace Example1
{
    [SourceLocation("C:\\Users\\KIIT\\Documents\\4_My_Projects\\Quantum Computing\\Example2\\Program.qs", OperationFunctor.Body, 9, 17)]
    public partial class GenerateQubit : Operation<QVoid, Result>, ICallable
    {
        public GenerateQubit(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "GenerateQubit";
        String ICallable.FullName => "Example1.GenerateQubit";
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__H
        {
            get;
            set;
        }

        protected ICallable<Qubit, Result> Microsoft__Quantum__Measurement__MResetZ
        {
            get;
            set;
        }

        public override Func<QVoid, Result> __Body__ => (__in__) =>
        {
#line hidden
            {
#line 10 "C:\\Users\\KIIT\\Documents\\4_My_Projects\\Quantum Computing\\Example2\\Program.qs"
                var q = Allocate__.Apply();
#line hidden
                bool __arg1__ = true;
                try
                {
#line 11 "C:\\Users\\KIIT\\Documents\\4_My_Projects\\Quantum Computing\\Example2\\Program.qs"
                    Microsoft__Quantum__Intrinsic__H.Apply(q);
#line 13 "C:\\Users\\KIIT\\Documents\\4_My_Projects\\Quantum Computing\\Example2\\Program.qs"
                    return Microsoft__Quantum__Measurement__MResetZ.Apply(q);
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(q);
                    }
                }
            }
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.Microsoft__Quantum__Intrinsic__H = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.H));
            this.Microsoft__Quantum__Measurement__MResetZ = this.__Factory__.Get<ICallable<Qubit, Result>>(typeof(global::Microsoft.Quantum.Measurement.MResetZ));
        }

        public override IApplyData __DataIn__(QVoid data) => data;
        public override IApplyData __DataOut__(Result data) => new QTuple<Result>(data);
        public static System.Threading.Tasks.Task<Result> Run(IOperationFactory __m__)
        {
            return __m__.Run<GenerateQubit, QVoid, Result>(QVoid.Instance);
        }
    }

    [SourceLocation("C:\\Users\\KIIT\\Documents\\4_My_Projects\\Quantum Computing\\Example2\\Program.qs", OperationFunctor.Body, 17, 30)]
    public partial class SRandomNumber : Operation<Int64, Int64>, ICallable
    {
        public SRandomNumber(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "SRandomNumber";
        String ICallable.FullName => "Example1.SRandomNumber";
        protected ICallable<Int64, Int64> Microsoft__Quantum__Math__BitSizeI
        {
            get;
            set;
        }

        protected ICallable<QVoid, Result> GenerateQubit__
        {
            get;
            set;
        }

        protected ICallable<IQArray<Result>, Int64> Microsoft__Quantum__Convert__ResultArrayAsInt
        {
            get;
            set;
        }

        public override Func<Int64, Int64> __Body__ => (__in__) =>
        {
            var max = __in__;
#line 18 "C:\\Users\\KIIT\\Documents\\4_My_Projects\\Quantum Computing\\Example2\\Program.qs"
            var output = 0L;
#line 19 "C:\\Users\\KIIT\\Documents\\4_My_Projects\\Quantum Computing\\Example2\\Program.qs"
            while (true)
            {
#line 20 "C:\\Users\\KIIT\\Documents\\4_My_Projects\\Quantum Computing\\Example2\\Program.qs"
                var bits = QArray<Result>.Create(0L);
#line 21 "C:\\Users\\KIIT\\Documents\\4_My_Projects\\Quantum Computing\\Example2\\Program.qs"
                foreach (var idxBit in new QRange(1L, Microsoft__Quantum__Math__BitSizeI.Apply(max)))
#line hidden
                {
#line 22 "C:\\Users\\KIIT\\Documents\\4_My_Projects\\Quantum Computing\\Example2\\Program.qs"
                    bits = QArray<Result>.Add(bits, new QArray<Result>(GenerateQubit__.Apply(QVoid.Instance)));
                }

#line 24 "C:\\Users\\KIIT\\Documents\\4_My_Projects\\Quantum Computing\\Example2\\Program.qs"
                output = Microsoft__Quantum__Convert__ResultArrayAsInt.Apply(bits?.Copy());
                if ((output <= max))
                {
                    break;
                }
                else
                {
                }
            }

#line 26 "C:\\Users\\KIIT\\Documents\\4_My_Projects\\Quantum Computing\\Example2\\Program.qs"
            return output;
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Math__BitSizeI = this.__Factory__.Get<ICallable<Int64, Int64>>(typeof(global::Microsoft.Quantum.Math.BitSizeI));
            this.GenerateQubit__ = this.__Factory__.Get<ICallable<QVoid, Result>>(typeof(GenerateQubit));
            this.Microsoft__Quantum__Convert__ResultArrayAsInt = this.__Factory__.Get<ICallable<IQArray<Result>, Int64>>(typeof(global::Microsoft.Quantum.Convert.ResultArrayAsInt));
        }

        public override IApplyData __DataIn__(Int64 data) => new QTuple<Int64>(data);
        public override IApplyData __DataOut__(Int64 data) => new QTuple<Int64>(data);
        public static System.Threading.Tasks.Task<Int64> Run(IOperationFactory __m__, Int64 max)
        {
            return __m__.Run<SRandomNumber, Int64, Int64>(max);
        }
    }

    [SourceLocation("C:\\Users\\KIIT\\Documents\\4_My_Projects\\Quantum Computing\\Example2\\Program.qs", OperationFunctor.Body, 30, -1)]
    public partial class Number : Operation<QVoid, Int64>, ICallable
    {
        public Number(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "Number";
        String ICallable.FullName => "Example1.Number";
        public static EntryPointInfo<QVoid, Int64> Info => new EntryPointInfo<QVoid, Int64>(typeof(Number));
        protected ICallable<String, QVoid> Message__
        {
            get;
            set;
        }

        protected ICallable<Int64, Int64> SRandomNumber__
        {
            get;
            set;
        }

        public override Func<QVoid, Int64> __Body__ => (__in__) =>
        {
#line 31 "C:\\Users\\KIIT\\Documents\\4_My_Projects\\Quantum Computing\\Example2\\Program.qs"
            var max = 35L;
#line 32 "C:\\Users\\KIIT\\Documents\\4_My_Projects\\Quantum Computing\\Example2\\Program.qs"
            Message__.Apply(String.Format("Generate a random number lower than {0}: ", max));
#line 33 "C:\\Users\\KIIT\\Documents\\4_My_Projects\\Quantum Computing\\Example2\\Program.qs"
            return SRandomNumber__.Apply(max);
        }

        ;
        public override void __Init__()
        {
            this.Message__ = this.__Factory__.Get<ICallable<String, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.Message));
            this.SRandomNumber__ = this.__Factory__.Get<ICallable<Int64, Int64>>(typeof(SRandomNumber));
        }

        public override IApplyData __DataIn__(QVoid data) => data;
        public override IApplyData __DataOut__(Int64 data) => new QTuple<Int64>(data);
        public static System.Threading.Tasks.Task<Int64> Run(IOperationFactory __m__)
        {
            return __m__.Run<Number, QVoid, Int64>(QVoid.Instance);
        }
    }
}